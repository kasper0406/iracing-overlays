name: MSBuild
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  SOLUTION_FILE_PATH: .
  BUILD_CONFIGURATION: Release

jobs:
  check:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2

      - name: Cache rust crates
        uses: actions/cache@v2
        env:
          cache-name: cache-rust-crates
        with:
          path: |
            ./target
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install clippy
        run: rustup component add clippy
      - name: Run lints
        run: cargo clippy # -- -D warnings

  build:
    needs: check
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2

      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Cache rust crates
        uses: actions/cache@v2
        env:
          cache-name: cache-rust-crates
        with:
          path: |
            ./target
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-

      - name: Build
        run: cargo build --verbose

      - name: Run tests
        run: cargo test --verbose

  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release-please.outputs.release_created }}
      tag_name: ${{ steps.release-please.outputs.tag_name }}
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release-please
        with:
          release-type: rust
          package-name: release-please-action

  release:
    needs: release-please
    runs-on: windows-latest
    if: needs.release-please.outputs.release_created
    steps:
      - uses: actions/checkout@v2

      - name: Cache rust crates
        uses: actions/cache@v2
        env:
          cache-name: cache-rust-crates
        with:
          path: |
            ./target
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-

      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Build (release)
        run: cargo rustc --release -- -Clink-args="/SUBSYSTEM:WINDOWS /ENTRY:mainCRTStartup"

      - name: Create distribution directory
        run: mkdir -p build/uberlays
      - name: Copy Uberlays binary
        run: cp .\target\release\uberlays.exe build/uberlays
      - name: Copy media contents
        run: Copy-Item -Path ".\media" -Destination ".\build\uberlays" -Recurse -Filter "*.dat"
      - name: Zip distribution
        run: Compress-Archive -Path .\build\uberlays -DestinationPath build\uberlays.zip

      - uses: svenstaro/upload-release-action@v2
        with:
          file: ./build/uberlays.zip
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          asset_name: uberlays-$tag.zip
          tag: ${{ needs.release-please.outputs.tag_name }}
